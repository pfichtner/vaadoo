.bytecode 61.0
.class public final synchronized com/example/Mandator
.super java/lang/Object
.inner class public static final Lookup inner java/lang/invoke/MethodHandles$Lookup outer java/lang/invoke/MethodHandles

.field private static final 'RANGE_ERROR' Ljava/lang/String; = "Mandator muss zwischen 1 und 9999 liegen"

.field private static final 'NOT_NUMERIC' Ljava/lang/String; = "Mandator muss numerisch sein"

.field private final 'id' I
.annotation visible Ljakarta/validation/constraints/Min;
value J = 1
message s = "Mandator muss zwischen 1 und 9999 liegen"
.end annotation
.annotation visible Ljakarta/validation/constraints/Max;
value J = 9999
message s = "Mandator muss zwischen 1 und 9999 liegen"
.end annotation
.end field

.field private final 'cachedStringValue' Ljava/lang/String;

.field private static 'cache' Ljava/util/Map; signature "Ljava/util/Map<Ljava/util/AbstractMap$SimpleEntry<Ljava/lang/String;Ljava/lang/Integer;>;Ljava/util/regex/Pattern;>;"

.method private <init>(I)V
aload 0
iload 1
iload 1
ldc "%1$4s"
iconst_1
anewarray java/lang/Object
dup
iconst_0
iload 1
aastore
bipush 32
bipush 48
return
.limit locals 2
.limit stack 7
.end method
.provide com/example/Mandator;<init>
.desc Ljava/lang/String;
.desc I
.desc Ljava/util/Map;

.method private <init>(ZLjava/lang/String;Z)V
aload 0
iload 1
aload 2
iload 3
aload 2
return
.limit locals 4
.limit stack 4
.end method
.provide com/example/Mandator;<init>

.method public <init>([Ljava/lang/String;)V
aload 0
aload 1
iconst_1
aload 1
iconst_0
aaload
iconst_0
return
.limit locals 2
.limit stack 4
.end method
.provide com/example/Mandator;<init>

.method public static main([Ljava/lang/String;)V
getstatic java/lang/System/out Ljava/io/PrintStream;
new com/example/Mandator
dup
aload 0
return
.limit locals 1
.limit stack 4
.end method
.dep java/lang/System;out
.provide com/example/Mandator;main
.desc Ljava/io/PrintStream;

.method public toString()Ljava/lang/String;
aload 0
getfield com/example/Mandator/cachedStringValue Ljava/lang/String;
areturn
.limit locals 1
.limit stack 1
.end method
.dep com/example/Mandator;cachedStringValue
.provide com/example/Mandator;toString
.desc Ljava/lang/String;

.method public getId()I
.annotation visible Ljakarta/validation/constraints/Min;
value J = 1
message s = "Mandator muss zwischen 1 und 9999 liegen"
.end annotation
.annotation visible Ljakarta/validation/constraints/Max;
value J = 9999
message s = "Mandator muss zwischen 1 und 9999 liegen"
.end annotation
.annotation invisible Llombok/Generated;
.end annotation
aload 0
getfield com/example/Mandator/id I
ireturn
.limit locals 1
.limit stack 1
.end method
.dep com/example/Mandator;id
.provide com/example/Mandator;getId
.desc I

.method public equals(Ljava/lang/Object;)Z
.annotation invisible Llombok/Generated;
.end annotation
aload 1
aload 0
if_acmpne L0
iconst_1
ireturn
L0:
.stack
locals Object com/example/Mandator
locals Object java/lang/Object
.end stack
aload 1
instanceof com/example/Mandator
ifne L1
iconst_0
ireturn
L1:
.stack
locals Object com/example/Mandator
locals Object java/lang/Object
.end stack
aload 1
checkcast com/example/Mandator
astore 2
aload 0
aload 2
if_icmpeq L2
iconst_0
ireturn
L2:
.stack
locals Object com/example/Mandator
locals Object java/lang/Object
locals Object com/example/Mandator
.end stack
aload 0
astore 3
aload 2
astore 4
aload 3
ifnonnull L3
aload 4
ifnull L4
goto L5
L3:
.stack
locals Object com/example/Mandator
locals Object java/lang/Object
locals Object com/example/Mandator
locals Object java/lang/String
locals Object java/lang/String
.end stack
aload 3
aload 4
ifne L4
L5:
.stack
locals Object com/example/Mandator
locals Object java/lang/Object
locals Object com/example/Mandator
locals Object java/lang/String
locals Object java/lang/String
.end stack
iconst_0
ireturn
L4:
.stack
locals Object com/example/Mandator
locals Object java/lang/Object
locals Object com/example/Mandator
locals Object java/lang/String
locals Object java/lang/String
.end stack
iconst_1
ireturn
.limit locals 5
.limit stack 2
.end method
.provide com/example/Mandator;equals

.method public hashCode()I
.annotation invisible Llombok/Generated;
.end annotation
bipush 59
istore 1
iconst_1
istore 2
iload 2
bipush 59
imul
aload 0
iadd
istore 2
aload 0
astore 3
iload 2
bipush 59
imul
aload 3
ifnonnull L0
bipush 43
goto L1
L0:
.stack
locals Object com/example/Mandator
locals Integer
locals Integer
locals Object java/lang/String
stack Integer
.end stack
aload 3
L1:
.stack
locals Object com/example/Mandator
locals Integer
locals Integer
locals Object java/lang/String
stack Integer
stack Integer
.end stack
iadd
istore 2
iload 2
ireturn
.limit locals 4
.limit stack 2
.end method
.provide com/example/Mandator;hashCode

.method private <init>(ILjava/lang/String;)V
.annotation invisible Llombok/Generated;
.end annotation
aload 0
iload 1
aload 2
aload 0
iload 1
putfield com/example/Mandator/id I
aload 0
aload 2
putfield com/example/Mandator/cachedStringValue Ljava/lang/String;
return
.limit locals 3
.limit stack 3
.end method
.dep com/example/Mandator;cachedStringValue
.dep com/example/Mandator;id
.provide com/example/Mandator;<init>
.desc Ljava/lang/String;
.desc I

.method private getCachedStringValue()Ljava/lang/String;
.annotation invisible Llombok/Generated;
.end annotation
aload 0
getfield com/example/Mandator/cachedStringValue Ljava/lang/String;
areturn
.limit locals 1
.limit stack 1
.end method
.dep com/example/Mandator;cachedStringValue
.provide com/example/Mandator;getCachedStringValue
.desc Ljava/lang/String;

.method private static validate(I)V
return
.limit locals 1
.limit stack 0
.end method
.provide com/example/Mandator;validate

.method private static validate(ZLjava/lang/String;Z)V
iload 0
ifne L0
new java/lang/IllegalArgumentException
dup
ldc "foo must be true"
athrow
L0:
.stack
locals Integer
locals Object java/lang/String
locals Integer
.end stack
aload 1
ifnonnull L1
new java/lang/NullPointerException
dup
ldc "id must not be empty"
athrow
L1:
.stack
locals Integer
locals Object java/lang/String
locals Integer
.end stack
aload 1
ifgt L2
new java/lang/IllegalArgumentException
dup
ldc "id must not be empty"
athrow
L2:
.stack
locals Integer
locals Object java/lang/String
locals Integer
.end stack
aload 1
ifnull L3
iconst_0
istore 3
bipush 0
anewarray jakarta/validation/constraints/Pattern$Flag
astore 4
aload 4
arraylength
istore 5
iconst_0
istore 6
L4:
.stack
locals Integer
locals Object java/lang/String
locals Integer
locals Integer
locals Object [Ljakarta/validation/constraints/Pattern$Flag;
locals Integer
locals Integer
.end stack
iload 6
iload 5
if_icmpge L5
aload 4
iload 6
aaload
astore 7
iload 3
aload 7
ior
istore 3
iinc 6 1
goto L4
L5:
.stack
locals Integer
locals Object java/lang/String
locals Integer
locals Integer
locals Object [Ljakarta/validation/constraints/Pattern$Flag;
locals Integer
locals Integer
.end stack
ldc "\\d+"
iload 3
aload 1
ifne L3
new java/lang/IllegalArgumentException
dup
ldc "Mandator muss numerisch sein"
athrow
L3:
.stack
locals Integer
locals Object java/lang/String
locals Integer
.end stack
iload 2
ifeq L6
new java/lang/IllegalArgumentException
dup
ldc "bar must be false"
athrow
L6:
.stack
locals Integer
locals Object java/lang/String
locals Integer
.end stack
return
.limit locals 8
.limit stack 3
.end method
.provide com/example/Mandator;validate

.method private static validate([Ljava/lang/String;)V
aload 0
ifnonnull L0
new java/lang/NullPointerException
dup
ldc "args must not be empty"
athrow
L0:
.stack
locals Object [Ljava/lang/String;
.end stack
aload 0
arraylength
ifgt L1
new java/lang/IllegalArgumentException
dup
ldc "args must not be empty"
athrow
L1:
.stack
locals Object [Ljava/lang/String;
.end stack
return
.limit locals 1
.limit stack 3
.end method
.provide com/example/Mandator;validate

.method private static validate(ILjava/lang/String;)V
iload 0
i2l
ldc 1
lcmp
ifge L0
new java/lang/IllegalArgumentException
dup
ldc "Mandator muss zwischen 1 und 9999 liegen"
athrow
L0:
.stack
locals Integer
locals Object java/lang/String
.end stack
iload 0
i2l
ldc 9999
lcmp
ifle L1
new java/lang/IllegalArgumentException
dup
ldc "Mandator muss zwischen 1 und 9999 liegen"
athrow
L1:
.stack
locals Integer
locals Object java/lang/String
.end stack
return
.limit locals 2
.limit stack 4
.end method
.provide com/example/Mandator;validate

.method private static synchronized cache(Ljava/lang/String;I)Ljava/util/regex/Pattern;
getstatic com/example/Mandator/cache Ljava/util/Map;
ifnonnull L0
new java/util/HashMap
dup
putstatic com/example/Mandator/cache Ljava/util/Map;
L0:
.stack
locals Object java/lang/String
locals Integer
.end stack
getstatic com/example/Mandator/cache Ljava/util/Map;
new java/util/AbstractMap$SimpleEntry
dup
aload 0
iload 1
checkcast java/util/regex/Pattern
areturn
.limit locals 2
.limit stack 5
.end method
.dep com/example/Mandator;cache
.provide com/example/Mandator;cache
.desc Ljava/util/Map;

.method private static synthetic lambda$cache$0(Ljava/util/AbstractMap$SimpleEntry;)Ljava/util/regex/Pattern;
aload 0
checkcast java/lang/String
aload 0
checkcast java/lang/Integer
areturn
.limit locals 1
.limit stack 2
.end method
.provide com/example/Mandator;lambda$cache$0
