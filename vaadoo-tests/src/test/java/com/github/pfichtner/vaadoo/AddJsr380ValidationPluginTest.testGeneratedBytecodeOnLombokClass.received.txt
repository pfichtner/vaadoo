package com.example;

import com.example.SomeLombokClass.SomeLombokClassBuilder;
import jakarta.validation.constraints.AssertFalse;
import jakarta.validation.constraints.AssertTrue;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotEmpty;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Null;
import java.util.Collection;
import java.util.Map;
import lombok.Generated;

public class SomeLombokClass {
   @Null
   private final Object someNullObject;
   @NotNull
   private final Object someObject;
   private final String valueWithoutAnnotation;
   @NotEmpty
   private final CharSequence someNotEmptyCharSequence;
   @NotEmpty
   private final String someNotEmptyString;
   @NotEmpty
   private final Collection someNotEmptyCollection;
   @NotEmpty
   private final Map someNotEmptyMap;
   @NotEmpty
   private final Integer[] someNotEmptyArray;
   @NotBlank
   private final CharSequence someNonBlankValue;
   @AssertTrue
   private final boolean someTrueValue;
   @AssertFalse
   private final boolean someFalseValue;
   @AssertTrue
   private final Boolean someTrueValueWrapper;
   @AssertFalse
   private final Boolean someFalseValueWrapper;
   @Min(42L)
   private final int someIntPrimitiveValueThatIsMinimal42;
   @Min(42L)
   private final Long someLongWrapperValueThatIsMinimal42;
   @NotNull
   @Min(42L)
   private final Short someShortWrapperValueThatIsNotNullAndMinimal42;

   public static void main(String[] args) {
      System.out.println(builder().someObject("isNotNull").someNonBlankValue("").build());
   }

   @Generated
   SomeLombokClass(@Null Object someNullObject, @NotNull Object someObject, String valueWithoutAnnotation, @NotEmpty CharSequence someNotEmptyCharSequence, @NotEmpty String someNotEmptyString, @NotEmpty Collection someNotEmptyCollection, @NotEmpty Map someNotEmptyMap, @NotEmpty Integer[] someNotEmptyArray, @NotBlank CharSequence someNonBlankValue, @AssertTrue boolean someTrueValue, @AssertFalse boolean someFalseValue, @AssertTrue Boolean someTrueValueWrapper, @AssertFalse Boolean someFalseValueWrapper, @Min(42L) int someIntPrimitiveValueThatIsMinimal42, @Min(42L) Long someLongWrapperValueThatIsMinimal42, @NotNull @Min(42L) Short someShortWrapperValueThatIsNotNullAndMinimal42) {
      this.someNullObject = someNullObject;
      this.someObject = someObject;
      this.valueWithoutAnnotation = valueWithoutAnnotation;
      this.someNotEmptyCharSequence = someNotEmptyCharSequence;
      this.someNotEmptyString = someNotEmptyString;
      this.someNotEmptyCollection = someNotEmptyCollection;
      this.someNotEmptyMap = someNotEmptyMap;
      this.someNotEmptyArray = someNotEmptyArray;
      this.someNonBlankValue = someNonBlankValue;
      this.someTrueValue = someTrueValue;
      this.someFalseValue = someFalseValue;
      this.someTrueValueWrapper = someTrueValueWrapper;
      this.someFalseValueWrapper = someFalseValueWrapper;
      this.someIntPrimitiveValueThatIsMinimal42 = someIntPrimitiveValueThatIsMinimal42;
      this.someLongWrapperValueThatIsMinimal42 = someLongWrapperValueThatIsMinimal42;
      this.someShortWrapperValueThatIsNotNullAndMinimal42 = someShortWrapperValueThatIsNotNullAndMinimal42;
   }

   @Generated
   public static SomeLombokClassBuilder builder() {
      return new SomeLombokClassBuilder();
   }
}
